vue实现的饿了么前端界面：

vue-cli搭建的页面。
后端：爬虫抓取数据，在用express大家一个web服务器，注册对应的路由函数，处理不同的
路由。
前端：
页面主要有头部组件，商家，商品，评论组件，还有购物车，按钮选项，评论选择等功能
组件。
首先进入页面的时候我会自动跳转到goods组件所对应的路由
这里我应用了vue-router的特性。
关于头部组建我运用到了css高斯模糊背景的套路，背景图层filter:blur
然后positon:absolute和内容部分评级，内容部分设置一个透明度。
商品组件我实现了滚动条跳转，逻辑就是点击左栏的菜单栏的某个单栏，
右栏菜单栏会跳转到相对应的单栏。同理右边也是一样。
这里的原理是我点击右边菜单栏的时候，会获取到当前索引，然后通过refs属性获取有菜单栏
的所有商品栏，然后找到与当前索引的索引一样的所对应的单栏。左边逻辑同理可得。

另外购物车我实现了物品购物掉落动画。这里按钮组件和购物车组件的父组件都是商品组件，
按钮组件点击时触发了add事件，父组件调用add事件函数然后通过refs属性调用购物车组件的生成
小球的方法。小球的动画运用的是vue的请求钩子动画。@before-enter的时候我听过之前事件传递的参数
给小球赋值了一个el属性，能够获取到当前按钮组件的坐标，然后css的变换是小球发生偏移。@enter的时候
小球回到原点，@after-enter的时候小球消失。

关于购物车的清空，我用的是v-bind实现数据双向绑定，在点击增加按钮的时候，通过Vue.set给单个
food设置一个count属性，点击清空，就是讲购物车的selectfood属性中的所有food遍历，然后count设置为0

另外商品组件在点击相应的food的时候，我这里运用了css3的z-index和fixed特性，是的food覆盖之前的界面。
在food组件中的评论选择组件，这里我运用了computed计算属性计算出好评，坏评，全部评论。

在商家组件这里我有个收藏功能，这里我是通过BOM操作解析url获取id,结合locationstorage实现


gui图形界面：
这里我用的html的canvas实现的，关键是canvas所提供的putiamgedata, getimagedata.
通过getiamgedata获取画布的所有像素点，一个像素点有4个字节，r,g,b,a.首先我实现了如何
画一个点。然后我在实现了将更新后的数据渲染到当前页面的render函数。接这实现了画线，画面的逻辑。
这里的颜色我用的是全局对象，点击不同颜色按钮更该全局颜色属性。
清空就是讲画布所有像素遍历，然后rgb为白色
撤销我用的是栈的方法每次存储所有画图后的像素数据，再点击撤销的时候，栈pop出上一次的像素数据，然后render.
油漆桶的功能，我是通过当前坐标点，遍历四周，是否存在注册的图形，点在图形里面，然后填充颜色。

flappy bird
我是仿写了python cocos的逻辑。
框架导演层guagame在给定的帧下运行场景层gua_scene，场景层在给定的速率下一直更新自己的属性元素，然后清层重绘。
游戏有三个场景，开始，进行，结束场景。
开始场景监听到1按钮事件以后更新为游戏进行场景。
游戏进行场景中，有小鸟的飞行动画，重力动画，地面移动动画，管道移动动画，碰撞检测，分数统计，声音变化。
发生碰撞（地面碰撞，管道碰撞）以后进入游戏结束场景。
另外还有金手指，小鸟拖拽，反向。
关于小鸟的飞行动画：这只一个小鸟帧数切换冷却时间，在给定的速率更新以后，count--减到0
就切换小鸟飞行的另一张帧，然后给新的帧设置冷却时间。
关于碰撞检测：首先判断一个点是否在一个面内，然后遍历检测面的所有点是否都在这个面里面
小鸟拖拽：鼠标拖拽小鸟，mouseend的时候，将小鸟的当前坐标更新为现在的坐标。
关于小鸟的重力：小鸟有个向下的重力加速度，以及向下的初始速度，和小鸟朝向。
当没有jump的时候，小鸟向下加速坠落，给变朝向。当jump的时候再次改变朝向，加上小鸟的跳跃距离。
关于小鸟反向：小鸟反向用的是scale(-1, 1)，和context.save， context.restore实现
关于地面移动：初始化多个地面图层对象，每个地面图层在给定的速率下更新自己的x坐标，然后在给每个
地面图层是指一个skipcount回溯功能，使它的x在skipcount为0的时候，左边回到初始位置。
关于分数统计：管道在移动过程中检测到没有与小鸟发生冲突，然后x坐标相同的时候，加count++,分数加加。
关于金手指：这里的小鸟，管道，帧率，速率等变量都是从config变量中获取的，所以只需要改变config变量
就可以做到全局改变。
声音变化：小鸟对不同事件调用不同的声音函数。
